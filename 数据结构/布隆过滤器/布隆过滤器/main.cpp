#define _CRT_SECURE_NO_WARNINGS 1

//discription:给两个文件，分别有100亿个query，只有1g内存，如何找两个文件的交集？
//方式一：将两个文件中的记录转化为整数，再映射到位图中；
//         不可以，因为记录转化为整数，但是没有办法通过整数找到该记录
//方式二：将一个文件中的记录转化为整数，映射到位图中，然后用第二个文件中的记录在位图中找
//       查找过程中，如果记录转化为的整数对应的比特位是1，说明该记录在另一个文件中也出现过,如果是0，则没有
//        这个方法因为不同记录通过计算出的整数可能相同（记录1亿条，而整数只有2^32个，所以1个整数不一定只对应一条记录）（类似哈希冲突），导致同一个字符串可能映射到同一个比特位了，
//        所以这个方法只可以找出部分交集，但是会有误差，（误差可能比较大），若果接收误差这个方法是可以的
//        既然有冲突，有没有什么办法能让这个误差小一点？
//        改进：一条记录对应多个比特位，比如：一条记录对应5个比特位，这样起两个记录5个比特位都相同的概率就会小一点
//            布隆过滤器：位图+多个哈希函数   用多个哈希函数讲一个数据映射到位图结构中
//                      布隆过滤器可以告诉我们某样东西一定不存在或可能存在，不保证一定存在（存在误差）
//方式三：分割文件
//      1.哈希切割--------一个文件分割成小文件，那另一个文件中的query在分割后的小文件中进行查找
//      2.利用位图：将一个文件中的query向位图中进行映射，在映射时顺便将该query保存到该比特位对应的文件中
//                从另一个文件中取query，然后在位图中进行查找，如果该比特位是0，则肯定不是交集，如果为1，说明该条query在文件1中也可能出现了，还得需要在该数据对应的文件中去查找
//      本质：中心思想是哈希切割，将记录分散到各个文件，然后在查找的过程中，增加上一个位图进行过滤